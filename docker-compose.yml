version: '3.8'

services:
  opencr:
    container_name: opencr
    hostname: opencr
    image: intrahealth/opencr:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - opencr-fhir
      - opencr-es
    environment:
      - NODE_ENV=docker
      - HAPI_FHIR_URL=http://opencr-fhir:8080/fhir/metadata
    networks:
      - cdr
    volumes:
      - ./configs/opencr/config.json:/src/server/config/config_docker.json
      - ./configs/opencr/mediator.json:/src/server/config/mediator.json
      - ./configs/opencr/decisionRules.json:/src/server/config/decisionRules.json
      - ./configs/opencr/PatientRelationship.json:/src/resources/Relationships/PatientRelationship.json

  opencr-fhir:
    image: "hapiproject/hapi:latest"
    container_name: opencr-fhir
    hostname: opencr-fhir
    restart: unless-stopped
    env_file:
     - configs/opencr/.env   
    volumes:
      - opencr-data-new:/data/hapi
      - ./configs/opencr/application.yml:/data/hapi/application.yaml
    networks:
      - cdr
    ports:
      - 8090:8080
    healthcheck:
      test: "apt-get install -y curl; curl -sS http://opencr-fhir:8080/fhir/metadata || exit 1"
      interval: 30s
      timeout: 240s
      retries: 3

  opencr-es:
    container_name: opencr-es
    hostname: es
    image: intrahealth/elasticsearch:latest
    restart: unless-stopped
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es-data-new:/usr/share/elasticsearch/data
    networks:
      - cdr

  shr:
    container_name: shr
    hostname: shr
    image: mherman22/shared-health-record:latest
    restart: unless-stopped
    ports:
      - 3030:3000
    environment:
      - NODE_ENV=docker
    networks:
      - cdr
    volumes:
      - ./configs/shr/config.json:/app/config/config_docker.json
      - ./configs/shr/mediator.json:/app/config/mediator_docker.json
  
  shr-fhir:
    image: "hapiproject/hapi:latest"
    container_name: shr-fhir
    hostname: shr-fhir
    restart: unless-stopped
    volumes:
      - hapi-data:/data/hapi
      - ./configs/shr/application.yml:/data/hapi/application.yaml
    networks:
      - cdr
    env_file:
      - configs/shr/.env
    healthcheck:
      test: "apt-get install -y curl; curl -sS http://localhost:8080/fhir/metadata || exit 1"
      interval: 30s
      timeout: 240s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      POSTGRES_MULTIPLE_DATABASES: opencr,shr
      POSTGRES_PASSWORD: ${PG_PW-postgres}
    volumes:
      - /var/lib/postgresql/data/
      - ./configs/postgres:/docker-entrypoint-initdb.d
    networks:
      - cdr

#OpenMRS facilityA
  openmrs-db-mysql:
    restart: "always"
    image: mysql:5.6
    command: "mysqld --character-set-server=utf8 --collation-server=utf8_general_ci"
    environment:
      MYSQL_DATABASE: 'openmrs'
      MYSQL_ROOT_PASSWORD: 'debezium'
      MYSQL_USER: 'mysqluser'
      MYSQL_PASSWORD: 'Admin123'
    ports:
      - "3309:3306"
    healthcheck:
      test: "exit 0"
    volumes:
      - ./configs/openmrs/mysql.cnf:/etc/mysql/conf.d/custom.cnf # mysql config preconfigured to allow binlog/debezium
      - openmrs-db-mysql-data:/var/lib/mysql

  openmrs-facilityA:
    restart: "always"
    image: openmrs/openmrs-reference-application-distro:demo
    depends_on:
      - openmrs-db-mysql
    ports:
      - "8062:8080"
      - "1044:1044"
    environment:
      DB_DATABASE: 'openmrs'
      DB_HOST: openmrs-db-mysql
      DB_USERNAME: 'mysqluser'
      DB_PASSWORD: 'Admin123'
      DB_CREATE_TABLES: 'true'
      DB_AUTO_UPDATE: 'true'
      MODULE_WEB_ADMIN: 'true'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs/"]
      timeout: 20s
    volumes:
      - openmrs-db-mysql-data:/usr/local/tomcat/.OpenMRS/
      - /usr/local/tomcat/.OpenMRS/modules/ # do not store modules in data
      - /usr/local/tomcat/.OpenMRS/owa/ # do not store owa in data

#OpenMRS facilityB instance
  openmrs-referenceapplication-mysql:
    restart: "always"
    image: mysql:5.6
    command: "mysqld --character-set-server=utf8 --collation-server=utf8_general_ci"
    environment:
      MYSQL_DATABASE: ${MYSQL_DB:-openmrs}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Admin123}
      MYSQL_USER: ${MYSQL_USER:-openmrs}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-Admin123}
    healthcheck:
      test: "exit 0"
    volumes:
      - ./configs/uat/mysql.cnf:/etc/mysql/conf.d/custom.cnf # mysql config preconfigured to allow binlog/debezium- ./dbdump:/docker-entrypoint-initdb.d
      - openmrs-referenceapplication-mysql-data:/var/lib/mysql  

  openmrs-referenceapplication:
    restart: "always"
    image: openmrs/openmrs-reference-application:${OPENMRS_VERSION:-demo}
    depends_on:
      - openmrs-referenceapplication-mysql
    ports:
      - "8083:8080"
    environment:
      OMRS_DB_NAME: ${MYSQL_DB:-openmrs}
      OMRS_DB_HOSTNAME: openmrs-referenceapplication-mysql
      OMRS_DB_USERNAME: ${MYSQL_USER:-openmrs}
      OMRS_DB_PASSWORD: ${MYSQL_PASSWORD:-Admin123}
      OMRS_CREATE_TABLES: 'true'
      OMRS_AUTO_UPDATE_DATABASE: 'true'
      OMRS_MODULE_WEB_ADMIN: 'true'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs/"]
      timeout: 20s
    volumes:
      - openmrs-referenceapplication-mysql-data:/usr/local/tomcat/.OpenMRS/
      - /usr/local/tomcat/.OpenMRS/modules/ # do not store modules in data
      - /usr/local/tomcat/.OpenMRS/owa/ # do not store owa in data

  mongo-db:
    container_name: mongo-db
    image: mongo:4.0
    networks:
      - cdr
    volumes:
      - "mongo-data:/data/db"
    restart: unless-stopped

  openhim-core:
    container_name: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    environment:
      mongo_url: "mongodb://mongo-db/openhim-development"
      mongo_atnaUrl: "mongodb://mongo-db/openhim-development"
      NODE_ENV: "development"
    ports:
      - "8080:8080"
      - "5000:5000"
      - "5001:5001"
    networks:
      - cdr
    healthcheck:
     test: "curl -sSk https://openhim-core:8080/heartbeat || exit 1"
     interval: 30s
     timeout: 30s
     retries: 3

  openhim-console:
    container_name: openhim-console
    image: jembi/openhim-console:latest
    restart: unless-stopped
    networks:
      - cdr
    ports:
      - "9000:80"
    healthcheck:
     test: "curl -sS http://openhim-console || exit 1"
     interval: 30s
     timeout: 30s
     retries: 3

  openhim-config:
    container_name: openhim-config
    image: ghcr.io/i-tech-uw/openhim-config:v0.0.0
    volumes:
      - ./configs/openhim-core/initial-config.json:/app/test-openhim-config.json
    networks:
      - cdr
    environment:
      - INITIAL_PW=Admin123
      - ADMIN_PW=$ADMIN_PW
      - API_URL=http://openhim-core:8080
  
  wait-for-openmrs:
    profiles: ['utility']
    container_name: wait-for-openmrs
    image: ghcr.io/i-tech-uw/wait-for-openmrs-action:latest 
    command:
    - "http://localhost:8080/openmrs"
    - "20" 
    - "10000"
    networks:
    - cdr

volumes:
  openmrs-db-mysql-data:
    driver: local
  openmrs-db-mysql-data2:
    driver: local
  es-data-new:
    driver: local
  mongo-data:
    driver: local
  shr:
    driver: local
  hapi-data:
    driver: local
  opencr-data-new:
    driver: local
  openmrs-referenceapplication-mysql-data:
    driver: local
  openmrs-referenceapplication-mysql-data2:
    driver: local

networks:
  cdr:
